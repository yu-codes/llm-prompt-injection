[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-prompt-injection"
version = "1.0.0"
description = "A comprehensive platform for testing LLM security against prompt injection attacks"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LLM Security Research Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "python-dotenv>=1.0.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "PyYAML>=6.0.1",
    "openai>=1.3.0",
    "anthropic>=0.7.0", 
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "jinja2>=3.1.0",
    "weasyprint>=60.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "loguru>=0.7.0",
    "rich>=13.0.0",
    "aiohttp>=3.8.0",
    "asyncio-throttle>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
]
production = [
    "gunicorn>=21.2.0",
]

[project.scripts]
llm-prompt-injection = "src.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=html --cov-report=term"